/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-1-15")
public class AgentSubscribeV26Msg implements org.apache.thrift.TBase<AgentSubscribeV26Msg, AgentSubscribeV26Msg._Fields>, java.io.Serializable, Cloneable, Comparable<AgentSubscribeV26Msg> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AgentSubscribeV26Msg");

  private static final org.apache.thrift.protocol.TField AGENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("agentId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField HOUSE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("houseId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField SUBSCRIBE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("subscribeDate", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AGENT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("agentName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField AGENT_COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("agentCompanyName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AGENT400_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("agent400Phone", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AGENT400_PHONE_EXT_FIELD_DESC = new org.apache.thrift.protocol.TField("agent400PhoneExt", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField AGENT_PORTRAIT_FIELD_DESC = new org.apache.thrift.protocol.TField("agentPortrait", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AgentSubscribeV26MsgStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AgentSubscribeV26MsgTupleSchemeFactory());
  }

  public long agentId; // optional
  public long houseId; // optional
  public String subscribeDate; // optional
  public String agentName; // optional
  public String agentCompanyName; // optional
  public String agent400Phone; // optional
  public String agent400PhoneExt; // optional
  public String agentPortrait; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AGENT_ID((short)1, "agentId"),
    HOUSE_ID((short)2, "houseId"),
    SUBSCRIBE_DATE((short)3, "subscribeDate"),
    AGENT_NAME((short)4, "agentName"),
    AGENT_COMPANY_NAME((short)5, "agentCompanyName"),
    AGENT400_PHONE((short)6, "agent400Phone"),
    AGENT400_PHONE_EXT((short)7, "agent400PhoneExt"),
    AGENT_PORTRAIT((short)8, "agentPortrait");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AGENT_ID
          return AGENT_ID;
        case 2: // HOUSE_ID
          return HOUSE_ID;
        case 3: // SUBSCRIBE_DATE
          return SUBSCRIBE_DATE;
        case 4: // AGENT_NAME
          return AGENT_NAME;
        case 5: // AGENT_COMPANY_NAME
          return AGENT_COMPANY_NAME;
        case 6: // AGENT400_PHONE
          return AGENT400_PHONE;
        case 7: // AGENT400_PHONE_EXT
          return AGENT400_PHONE_EXT;
        case 8: // AGENT_PORTRAIT
          return AGENT_PORTRAIT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AGENTID_ISSET_ID = 0;
  private static final int __HOUSEID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.AGENT_ID,_Fields.HOUSE_ID,_Fields.SUBSCRIBE_DATE,_Fields.AGENT_NAME,_Fields.AGENT_COMPANY_NAME,_Fields.AGENT400_PHONE,_Fields.AGENT400_PHONE_EXT,_Fields.AGENT_PORTRAIT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AGENT_ID, new org.apache.thrift.meta_data.FieldMetaData("agentId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.HOUSE_ID, new org.apache.thrift.meta_data.FieldMetaData("houseId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SUBSCRIBE_DATE, new org.apache.thrift.meta_data.FieldMetaData("subscribeDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT_NAME, new org.apache.thrift.meta_data.FieldMetaData("agentName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT_COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("agentCompanyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT400_PHONE, new org.apache.thrift.meta_data.FieldMetaData("agent400Phone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT400_PHONE_EXT, new org.apache.thrift.meta_data.FieldMetaData("agent400PhoneExt", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT_PORTRAIT, new org.apache.thrift.meta_data.FieldMetaData("agentPortrait", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AgentSubscribeV26Msg.class, metaDataMap);
  }

  public AgentSubscribeV26Msg() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AgentSubscribeV26Msg(AgentSubscribeV26Msg other) {
    __isset_bitfield = other.__isset_bitfield;
    this.agentId = other.agentId;
    this.houseId = other.houseId;
    if (other.isSetSubscribeDate()) {
      this.subscribeDate = other.subscribeDate;
    }
    if (other.isSetAgentName()) {
      this.agentName = other.agentName;
    }
    if (other.isSetAgentCompanyName()) {
      this.agentCompanyName = other.agentCompanyName;
    }
    if (other.isSetAgent400Phone()) {
      this.agent400Phone = other.agent400Phone;
    }
    if (other.isSetAgent400PhoneExt()) {
      this.agent400PhoneExt = other.agent400PhoneExt;
    }
    if (other.isSetAgentPortrait()) {
      this.agentPortrait = other.agentPortrait;
    }
  }

  public AgentSubscribeV26Msg deepCopy() {
    return new AgentSubscribeV26Msg(this);
  }

  @Override
  public void clear() {
    setAgentIdIsSet(false);
    this.agentId = 0;
    setHouseIdIsSet(false);
    this.houseId = 0;
    this.subscribeDate = null;
    this.agentName = null;
    this.agentCompanyName = null;
    this.agent400Phone = null;
    this.agent400PhoneExt = null;
    this.agentPortrait = null;
  }

  public long getAgentId() {
    return this.agentId;
  }

  public AgentSubscribeV26Msg setAgentId(long agentId) {
    this.agentId = agentId;
    setAgentIdIsSet(true);
    return this;
  }

  public void unsetAgentId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGENTID_ISSET_ID);
  }

  /** Returns true if field agentId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentId() {
    return EncodingUtils.testBit(__isset_bitfield, __AGENTID_ISSET_ID);
  }

  public void setAgentIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGENTID_ISSET_ID, value);
  }

  public long getHouseId() {
    return this.houseId;
  }

  public AgentSubscribeV26Msg setHouseId(long houseId) {
    this.houseId = houseId;
    setHouseIdIsSet(true);
    return this;
  }

  public void unsetHouseId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HOUSEID_ISSET_ID);
  }

  /** Returns true if field houseId is set (has been assigned a value) and false otherwise */
  public boolean isSetHouseId() {
    return EncodingUtils.testBit(__isset_bitfield, __HOUSEID_ISSET_ID);
  }

  public void setHouseIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HOUSEID_ISSET_ID, value);
  }

  public String getSubscribeDate() {
    return this.subscribeDate;
  }

  public AgentSubscribeV26Msg setSubscribeDate(String subscribeDate) {
    this.subscribeDate = subscribeDate;
    return this;
  }

  public void unsetSubscribeDate() {
    this.subscribeDate = null;
  }

  /** Returns true if field subscribeDate is set (has been assigned a value) and false otherwise */
  public boolean isSetSubscribeDate() {
    return this.subscribeDate != null;
  }

  public void setSubscribeDateIsSet(boolean value) {
    if (!value) {
      this.subscribeDate = null;
    }
  }

  public String getAgentName() {
    return this.agentName;
  }

  public AgentSubscribeV26Msg setAgentName(String agentName) {
    this.agentName = agentName;
    return this;
  }

  public void unsetAgentName() {
    this.agentName = null;
  }

  /** Returns true if field agentName is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentName() {
    return this.agentName != null;
  }

  public void setAgentNameIsSet(boolean value) {
    if (!value) {
      this.agentName = null;
    }
  }

  public String getAgentCompanyName() {
    return this.agentCompanyName;
  }

  public AgentSubscribeV26Msg setAgentCompanyName(String agentCompanyName) {
    this.agentCompanyName = agentCompanyName;
    return this;
  }

  public void unsetAgentCompanyName() {
    this.agentCompanyName = null;
  }

  /** Returns true if field agentCompanyName is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentCompanyName() {
    return this.agentCompanyName != null;
  }

  public void setAgentCompanyNameIsSet(boolean value) {
    if (!value) {
      this.agentCompanyName = null;
    }
  }

  public String getAgent400Phone() {
    return this.agent400Phone;
  }

  public AgentSubscribeV26Msg setAgent400Phone(String agent400Phone) {
    this.agent400Phone = agent400Phone;
    return this;
  }

  public void unsetAgent400Phone() {
    this.agent400Phone = null;
  }

  /** Returns true if field agent400Phone is set (has been assigned a value) and false otherwise */
  public boolean isSetAgent400Phone() {
    return this.agent400Phone != null;
  }

  public void setAgent400PhoneIsSet(boolean value) {
    if (!value) {
      this.agent400Phone = null;
    }
  }

  public String getAgent400PhoneExt() {
    return this.agent400PhoneExt;
  }

  public AgentSubscribeV26Msg setAgent400PhoneExt(String agent400PhoneExt) {
    this.agent400PhoneExt = agent400PhoneExt;
    return this;
  }

  public void unsetAgent400PhoneExt() {
    this.agent400PhoneExt = null;
  }

  /** Returns true if field agent400PhoneExt is set (has been assigned a value) and false otherwise */
  public boolean isSetAgent400PhoneExt() {
    return this.agent400PhoneExt != null;
  }

  public void setAgent400PhoneExtIsSet(boolean value) {
    if (!value) {
      this.agent400PhoneExt = null;
    }
  }

  public String getAgentPortrait() {
    return this.agentPortrait;
  }

  public AgentSubscribeV26Msg setAgentPortrait(String agentPortrait) {
    this.agentPortrait = agentPortrait;
    return this;
  }

  public void unsetAgentPortrait() {
    this.agentPortrait = null;
  }

  /** Returns true if field agentPortrait is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentPortrait() {
    return this.agentPortrait != null;
  }

  public void setAgentPortraitIsSet(boolean value) {
    if (!value) {
      this.agentPortrait = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AGENT_ID:
      if (value == null) {
        unsetAgentId();
      } else {
        setAgentId((Long)value);
      }
      break;

    case HOUSE_ID:
      if (value == null) {
        unsetHouseId();
      } else {
        setHouseId((Long)value);
      }
      break;

    case SUBSCRIBE_DATE:
      if (value == null) {
        unsetSubscribeDate();
      } else {
        setSubscribeDate((String)value);
      }
      break;

    case AGENT_NAME:
      if (value == null) {
        unsetAgentName();
      } else {
        setAgentName((String)value);
      }
      break;

    case AGENT_COMPANY_NAME:
      if (value == null) {
        unsetAgentCompanyName();
      } else {
        setAgentCompanyName((String)value);
      }
      break;

    case AGENT400_PHONE:
      if (value == null) {
        unsetAgent400Phone();
      } else {
        setAgent400Phone((String)value);
      }
      break;

    case AGENT400_PHONE_EXT:
      if (value == null) {
        unsetAgent400PhoneExt();
      } else {
        setAgent400PhoneExt((String)value);
      }
      break;

    case AGENT_PORTRAIT:
      if (value == null) {
        unsetAgentPortrait();
      } else {
        setAgentPortrait((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AGENT_ID:
      return Long.valueOf(getAgentId());

    case HOUSE_ID:
      return Long.valueOf(getHouseId());

    case SUBSCRIBE_DATE:
      return getSubscribeDate();

    case AGENT_NAME:
      return getAgentName();

    case AGENT_COMPANY_NAME:
      return getAgentCompanyName();

    case AGENT400_PHONE:
      return getAgent400Phone();

    case AGENT400_PHONE_EXT:
      return getAgent400PhoneExt();

    case AGENT_PORTRAIT:
      return getAgentPortrait();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AGENT_ID:
      return isSetAgentId();
    case HOUSE_ID:
      return isSetHouseId();
    case SUBSCRIBE_DATE:
      return isSetSubscribeDate();
    case AGENT_NAME:
      return isSetAgentName();
    case AGENT_COMPANY_NAME:
      return isSetAgentCompanyName();
    case AGENT400_PHONE:
      return isSetAgent400Phone();
    case AGENT400_PHONE_EXT:
      return isSetAgent400PhoneExt();
    case AGENT_PORTRAIT:
      return isSetAgentPortrait();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AgentSubscribeV26Msg)
      return this.equals((AgentSubscribeV26Msg)that);
    return false;
  }

  public boolean equals(AgentSubscribeV26Msg that) {
    if (that == null)
      return false;

    boolean this_present_agentId = true && this.isSetAgentId();
    boolean that_present_agentId = true && that.isSetAgentId();
    if (this_present_agentId || that_present_agentId) {
      if (!(this_present_agentId && that_present_agentId))
        return false;
      if (this.agentId != that.agentId)
        return false;
    }

    boolean this_present_houseId = true && this.isSetHouseId();
    boolean that_present_houseId = true && that.isSetHouseId();
    if (this_present_houseId || that_present_houseId) {
      if (!(this_present_houseId && that_present_houseId))
        return false;
      if (this.houseId != that.houseId)
        return false;
    }

    boolean this_present_subscribeDate = true && this.isSetSubscribeDate();
    boolean that_present_subscribeDate = true && that.isSetSubscribeDate();
    if (this_present_subscribeDate || that_present_subscribeDate) {
      if (!(this_present_subscribeDate && that_present_subscribeDate))
        return false;
      if (!this.subscribeDate.equals(that.subscribeDate))
        return false;
    }

    boolean this_present_agentName = true && this.isSetAgentName();
    boolean that_present_agentName = true && that.isSetAgentName();
    if (this_present_agentName || that_present_agentName) {
      if (!(this_present_agentName && that_present_agentName))
        return false;
      if (!this.agentName.equals(that.agentName))
        return false;
    }

    boolean this_present_agentCompanyName = true && this.isSetAgentCompanyName();
    boolean that_present_agentCompanyName = true && that.isSetAgentCompanyName();
    if (this_present_agentCompanyName || that_present_agentCompanyName) {
      if (!(this_present_agentCompanyName && that_present_agentCompanyName))
        return false;
      if (!this.agentCompanyName.equals(that.agentCompanyName))
        return false;
    }

    boolean this_present_agent400Phone = true && this.isSetAgent400Phone();
    boolean that_present_agent400Phone = true && that.isSetAgent400Phone();
    if (this_present_agent400Phone || that_present_agent400Phone) {
      if (!(this_present_agent400Phone && that_present_agent400Phone))
        return false;
      if (!this.agent400Phone.equals(that.agent400Phone))
        return false;
    }

    boolean this_present_agent400PhoneExt = true && this.isSetAgent400PhoneExt();
    boolean that_present_agent400PhoneExt = true && that.isSetAgent400PhoneExt();
    if (this_present_agent400PhoneExt || that_present_agent400PhoneExt) {
      if (!(this_present_agent400PhoneExt && that_present_agent400PhoneExt))
        return false;
      if (!this.agent400PhoneExt.equals(that.agent400PhoneExt))
        return false;
    }

    boolean this_present_agentPortrait = true && this.isSetAgentPortrait();
    boolean that_present_agentPortrait = true && that.isSetAgentPortrait();
    if (this_present_agentPortrait || that_present_agentPortrait) {
      if (!(this_present_agentPortrait && that_present_agentPortrait))
        return false;
      if (!this.agentPortrait.equals(that.agentPortrait))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_agentId = true && (isSetAgentId());
    list.add(present_agentId);
    if (present_agentId)
      list.add(agentId);

    boolean present_houseId = true && (isSetHouseId());
    list.add(present_houseId);
    if (present_houseId)
      list.add(houseId);

    boolean present_subscribeDate = true && (isSetSubscribeDate());
    list.add(present_subscribeDate);
    if (present_subscribeDate)
      list.add(subscribeDate);

    boolean present_agentName = true && (isSetAgentName());
    list.add(present_agentName);
    if (present_agentName)
      list.add(agentName);

    boolean present_agentCompanyName = true && (isSetAgentCompanyName());
    list.add(present_agentCompanyName);
    if (present_agentCompanyName)
      list.add(agentCompanyName);

    boolean present_agent400Phone = true && (isSetAgent400Phone());
    list.add(present_agent400Phone);
    if (present_agent400Phone)
      list.add(agent400Phone);

    boolean present_agent400PhoneExt = true && (isSetAgent400PhoneExt());
    list.add(present_agent400PhoneExt);
    if (present_agent400PhoneExt)
      list.add(agent400PhoneExt);

    boolean present_agentPortrait = true && (isSetAgentPortrait());
    list.add(present_agentPortrait);
    if (present_agentPortrait)
      list.add(agentPortrait);

    return list.hashCode();
  }

  @Override
  public int compareTo(AgentSubscribeV26Msg other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentId, other.agentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHouseId()).compareTo(other.isSetHouseId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHouseId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.houseId, other.houseId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubscribeDate()).compareTo(other.isSetSubscribeDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubscribeDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subscribeDate, other.subscribeDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgentName()).compareTo(other.isSetAgentName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentName, other.agentName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgentCompanyName()).compareTo(other.isSetAgentCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentCompanyName, other.agentCompanyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgent400Phone()).compareTo(other.isSetAgent400Phone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgent400Phone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agent400Phone, other.agent400Phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgent400PhoneExt()).compareTo(other.isSetAgent400PhoneExt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgent400PhoneExt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agent400PhoneExt, other.agent400PhoneExt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgentPortrait()).compareTo(other.isSetAgentPortrait());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentPortrait()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentPortrait, other.agentPortrait);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AgentSubscribeV26Msg(");
    boolean first = true;

    if (isSetAgentId()) {
      sb.append("agentId:");
      sb.append(this.agentId);
      first = false;
    }
    if (isSetHouseId()) {
      if (!first) sb.append(", ");
      sb.append("houseId:");
      sb.append(this.houseId);
      first = false;
    }
    if (isSetSubscribeDate()) {
      if (!first) sb.append(", ");
      sb.append("subscribeDate:");
      if (this.subscribeDate == null) {
        sb.append("null");
      } else {
        sb.append(this.subscribeDate);
      }
      first = false;
    }
    if (isSetAgentName()) {
      if (!first) sb.append(", ");
      sb.append("agentName:");
      if (this.agentName == null) {
        sb.append("null");
      } else {
        sb.append(this.agentName);
      }
      first = false;
    }
    if (isSetAgentCompanyName()) {
      if (!first) sb.append(", ");
      sb.append("agentCompanyName:");
      if (this.agentCompanyName == null) {
        sb.append("null");
      } else {
        sb.append(this.agentCompanyName);
      }
      first = false;
    }
    if (isSetAgent400Phone()) {
      if (!first) sb.append(", ");
      sb.append("agent400Phone:");
      if (this.agent400Phone == null) {
        sb.append("null");
      } else {
        sb.append(this.agent400Phone);
      }
      first = false;
    }
    if (isSetAgent400PhoneExt()) {
      if (!first) sb.append(", ");
      sb.append("agent400PhoneExt:");
      if (this.agent400PhoneExt == null) {
        sb.append("null");
      } else {
        sb.append(this.agent400PhoneExt);
      }
      first = false;
    }
    if (isSetAgentPortrait()) {
      if (!first) sb.append(", ");
      sb.append("agentPortrait:");
      if (this.agentPortrait == null) {
        sb.append("null");
      } else {
        sb.append(this.agentPortrait);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AgentSubscribeV26MsgStandardSchemeFactory implements SchemeFactory {
    public AgentSubscribeV26MsgStandardScheme getScheme() {
      return new AgentSubscribeV26MsgStandardScheme();
    }
  }

  private static class AgentSubscribeV26MsgStandardScheme extends StandardScheme<AgentSubscribeV26Msg> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AgentSubscribeV26Msg struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AGENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.agentId = iprot.readI64();
              struct.setAgentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HOUSE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.houseId = iprot.readI64();
              struct.setHouseIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUBSCRIBE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subscribeDate = iprot.readString();
              struct.setSubscribeDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AGENT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentName = iprot.readString();
              struct.setAgentNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // AGENT_COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentCompanyName = iprot.readString();
              struct.setAgentCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AGENT400_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agent400Phone = iprot.readString();
              struct.setAgent400PhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AGENT400_PHONE_EXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agent400PhoneExt = iprot.readString();
              struct.setAgent400PhoneExtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AGENT_PORTRAIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentPortrait = iprot.readString();
              struct.setAgentPortraitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AgentSubscribeV26Msg struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAgentId()) {
        oprot.writeFieldBegin(AGENT_ID_FIELD_DESC);
        oprot.writeI64(struct.agentId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHouseId()) {
        oprot.writeFieldBegin(HOUSE_ID_FIELD_DESC);
        oprot.writeI64(struct.houseId);
        oprot.writeFieldEnd();
      }
      if (struct.subscribeDate != null) {
        if (struct.isSetSubscribeDate()) {
          oprot.writeFieldBegin(SUBSCRIBE_DATE_FIELD_DESC);
          oprot.writeString(struct.subscribeDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agentName != null) {
        if (struct.isSetAgentName()) {
          oprot.writeFieldBegin(AGENT_NAME_FIELD_DESC);
          oprot.writeString(struct.agentName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agentCompanyName != null) {
        if (struct.isSetAgentCompanyName()) {
          oprot.writeFieldBegin(AGENT_COMPANY_NAME_FIELD_DESC);
          oprot.writeString(struct.agentCompanyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agent400Phone != null) {
        if (struct.isSetAgent400Phone()) {
          oprot.writeFieldBegin(AGENT400_PHONE_FIELD_DESC);
          oprot.writeString(struct.agent400Phone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agent400PhoneExt != null) {
        if (struct.isSetAgent400PhoneExt()) {
          oprot.writeFieldBegin(AGENT400_PHONE_EXT_FIELD_DESC);
          oprot.writeString(struct.agent400PhoneExt);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agentPortrait != null) {
        if (struct.isSetAgentPortrait()) {
          oprot.writeFieldBegin(AGENT_PORTRAIT_FIELD_DESC);
          oprot.writeString(struct.agentPortrait);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AgentSubscribeV26MsgTupleSchemeFactory implements SchemeFactory {
    public AgentSubscribeV26MsgTupleScheme getScheme() {
      return new AgentSubscribeV26MsgTupleScheme();
    }
  }

  private static class AgentSubscribeV26MsgTupleScheme extends TupleScheme<AgentSubscribeV26Msg> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AgentSubscribeV26Msg struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAgentId()) {
        optionals.set(0);
      }
      if (struct.isSetHouseId()) {
        optionals.set(1);
      }
      if (struct.isSetSubscribeDate()) {
        optionals.set(2);
      }
      if (struct.isSetAgentName()) {
        optionals.set(3);
      }
      if (struct.isSetAgentCompanyName()) {
        optionals.set(4);
      }
      if (struct.isSetAgent400Phone()) {
        optionals.set(5);
      }
      if (struct.isSetAgent400PhoneExt()) {
        optionals.set(6);
      }
      if (struct.isSetAgentPortrait()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetAgentId()) {
        oprot.writeI64(struct.agentId);
      }
      if (struct.isSetHouseId()) {
        oprot.writeI64(struct.houseId);
      }
      if (struct.isSetSubscribeDate()) {
        oprot.writeString(struct.subscribeDate);
      }
      if (struct.isSetAgentName()) {
        oprot.writeString(struct.agentName);
      }
      if (struct.isSetAgentCompanyName()) {
        oprot.writeString(struct.agentCompanyName);
      }
      if (struct.isSetAgent400Phone()) {
        oprot.writeString(struct.agent400Phone);
      }
      if (struct.isSetAgent400PhoneExt()) {
        oprot.writeString(struct.agent400PhoneExt);
      }
      if (struct.isSetAgentPortrait()) {
        oprot.writeString(struct.agentPortrait);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AgentSubscribeV26Msg struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.agentId = iprot.readI64();
        struct.setAgentIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.houseId = iprot.readI64();
        struct.setHouseIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.subscribeDate = iprot.readString();
        struct.setSubscribeDateIsSet(true);
      }
      if (incoming.get(3)) {
        struct.agentName = iprot.readString();
        struct.setAgentNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.agentCompanyName = iprot.readString();
        struct.setAgentCompanyNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.agent400Phone = iprot.readString();
        struct.setAgent400PhoneIsSet(true);
      }
      if (incoming.get(6)) {
        struct.agent400PhoneExt = iprot.readString();
        struct.setAgent400PhoneExtIsSet(true);
      }
      if (incoming.get(7)) {
        struct.agentPortrait = iprot.readString();
        struct.setAgentPortraitIsSet(true);
      }
    }
  }

}

